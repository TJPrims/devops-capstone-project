name: CI Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: python:3.9-slim
    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: pgs3cr3t
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URI: postgres://postgres:pgs3cr3t@postgres:5432/testdb
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install --force-reinstall psycopg2-binary
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h postgres -p 5432 && echo "PostgreSQL is ready!" && break || sleep 5;
          done

      - name: Debug installed packages
        run: pip list

      - name: Log DATABASE_URI
        run: echo $DATABASE_URI

      - name: Verify SQLAlchemy PostgreSQL dialect
        continue-on-error: true
        run: |
          python -c "from sqlalchemy.dialects import registry; print(registry.load('postgresql'))"

      - name: Run unit tests with Nose
        run: |
          nosetests -v --with-spec --spec-color --with-coverage --cover-package=service

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: .coverage
